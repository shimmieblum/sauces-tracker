// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sauces.Core;

#nullable disable

namespace Sauces.Core.Migrations
{
    [DbContext(typeof(SaucesContext))]
    partial class SaucesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Sauces.Core.Model.FermentationRecipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("LengthInDays")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FermentationRecipes");
                });

            modelBuilder.Entity("Sauces.Core.Model.FermentationRecipeAsIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FermentationRecipeId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Percentage")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("SauceRecipeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FermentationRecipeId");

                    b.HasIndex("SauceRecipeId");

                    b.ToTable("FermentationRecipeAsIngredient");
                });

            modelBuilder.Entity("Sauces.Core.Model.Ingredient", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Sauces.Core.Model.RecipeIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FermentationRecipeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("IngredientName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Percentage")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("SauceRecipeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FermentationRecipeId");

                    b.HasIndex("IngredientName");

                    b.HasIndex("SauceRecipeId");

                    b.ToTable("RecipeIngredient");
                });

            modelBuilder.Entity("Sauces.Core.Model.Sauce", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Sauces");
                });

            modelBuilder.Entity("Sauces.Core.Model.SauceRecipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SauceRecipe");
                });

            modelBuilder.Entity("Sauces.Core.Model.FermentationRecipeAsIngredient", b =>
                {
                    b.HasOne("Sauces.Core.Model.FermentationRecipe", "FermentationRecipe")
                        .WithMany()
                        .HasForeignKey("FermentationRecipeId");

                    b.HasOne("Sauces.Core.Model.SauceRecipe", null)
                        .WithMany("Fermentations")
                        .HasForeignKey("SauceRecipeId");

                    b.Navigation("FermentationRecipe");
                });

            modelBuilder.Entity("Sauces.Core.Model.RecipeIngredient", b =>
                {
                    b.HasOne("Sauces.Core.Model.FermentationRecipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("FermentationRecipeId");

                    b.HasOne("Sauces.Core.Model.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientName");

                    b.HasOne("Sauces.Core.Model.SauceRecipe", null)
                        .WithMany("NonFermentedIngredients")
                        .HasForeignKey("SauceRecipeId");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Sauces.Core.Model.Sauce", b =>
                {
                    b.HasOne("Sauces.Core.Model.SauceRecipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Sauces.Core.Model.FermentationRecipe", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("Sauces.Core.Model.SauceRecipe", b =>
                {
                    b.Navigation("Fermentations");

                    b.Navigation("NonFermentedIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
